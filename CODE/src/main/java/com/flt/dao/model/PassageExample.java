package com.flt.dao.model;

import java.util.ArrayList;
import java.util.List;

public class PassageExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public PassageExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andId_passageIsNull() {
			addCriterion("id_passage is null");
			return (Criteria) this;
		}

		public Criteria andId_passageIsNotNull() {
			addCriterion("id_passage is not null");
			return (Criteria) this;
		}

		public Criteria andId_passageEqualTo(Integer value) {
			addCriterion("id_passage =", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageNotEqualTo(Integer value) {
			addCriterion("id_passage <>", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageGreaterThan(Integer value) {
			addCriterion("id_passage >", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_passage >=", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageLessThan(Integer value) {
			addCriterion("id_passage <", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageLessThanOrEqualTo(Integer value) {
			addCriterion("id_passage <=", value, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageIn(List<Integer> values) {
			addCriterion("id_passage in", values, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageNotIn(List<Integer> values) {
			addCriterion("id_passage not in", values, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageBetween(Integer value1, Integer value2) {
			addCriterion("id_passage between", value1, value2, "id_passage");
			return (Criteria) this;
		}

		public Criteria andId_passageNotBetween(Integer value1, Integer value2) {
			addCriterion("id_passage not between", value1, value2, "id_passage");
			return (Criteria) this;
		}

		public Criteria andPassageTitleIsNull() {
			addCriterion("passage_title is null");
			return (Criteria) this;
		}

		public Criteria andPassageTitleIsNotNull() {
			addCriterion("passage_title is not null");
			return (Criteria) this;
		}

		public Criteria andPassageTitleEqualTo(String value) {
			addCriterion("passage_title =", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleNotEqualTo(String value) {
			addCriterion("passage_title <>", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleGreaterThan(String value) {
			addCriterion("passage_title >", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleGreaterThanOrEqualTo(String value) {
			addCriterion("passage_title >=", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleLessThan(String value) {
			addCriterion("passage_title <", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleLessThanOrEqualTo(String value) {
			addCriterion("passage_title <=", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleLike(String value) {
			addCriterion("passage_title like", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleNotLike(String value) {
			addCriterion("passage_title not like", value, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleIn(List<String> values) {
			addCriterion("passage_title in", values, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleNotIn(List<String> values) {
			addCriterion("passage_title not in", values, "passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleBetween(String value1, String value2) {
			addCriterion("passage_title between", value1, value2,
					"passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageTitleNotBetween(String value1, String value2) {
			addCriterion("passage_title not between", value1, value2,
					"passageTitle");
			return (Criteria) this;
		}

		public Criteria andPassageContentIsNull() {
			addCriterion("passage_content is null");
			return (Criteria) this;
		}

		public Criteria andPassageContentIsNotNull() {
			addCriterion("passage_content is not null");
			return (Criteria) this;
		}

		public Criteria andPassageContentEqualTo(String value) {
			addCriterion("passage_content =", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentNotEqualTo(String value) {
			addCriterion("passage_content <>", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentGreaterThan(String value) {
			addCriterion("passage_content >", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentGreaterThanOrEqualTo(String value) {
			addCriterion("passage_content >=", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentLessThan(String value) {
			addCriterion("passage_content <", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentLessThanOrEqualTo(String value) {
			addCriterion("passage_content <=", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentLike(String value) {
			addCriterion("passage_content like", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentNotLike(String value) {
			addCriterion("passage_content not like", value, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentIn(List<String> values) {
			addCriterion("passage_content in", values, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentNotIn(List<String> values) {
			addCriterion("passage_content not in", values, "passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentBetween(String value1, String value2) {
			addCriterion("passage_content between", value1, value2,
					"passageContent");
			return (Criteria) this;
		}

		public Criteria andPassageContentNotBetween(String value1, String value2) {
			addCriterion("passage_content not between", value1, value2,
					"passageContent");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(Integer value) {
			addCriterion("type =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(Integer value) {
			addCriterion("type <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(Integer value) {
			addCriterion("type >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("type >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(Integer value) {
			addCriterion("type <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(Integer value) {
			addCriterion("type <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<Integer> values) {
			addCriterion("type in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<Integer> values) {
			addCriterion("type not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(Integer value1, Integer value2) {
			addCriterion("type between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("type not between", value1, value2, "type");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table p_passage
	 * @mbggenerated  Tue Dec 31 17:59:45 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table p_passage
     *
     * @mbggenerated do_not_delete_during_merge Tue Dec 31 17:47:09 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}